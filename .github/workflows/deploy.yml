name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'data/processed/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas jinja2

      - name: Generate site data
        run: |
          python -c "
          import json
          import pandas as pd
          from pathlib import Path
          from datetime import datetime

          # Create docs directory if it doesn't exist
          docs_dir = Path('docs')
          docs_dir.mkdir(exist_ok=True)

          # Load latest statistics if available
          stats_file = Path('data/processed/latest_stats.json')
          if stats_file.exists():
              with open(stats_file) as f:
                  stats = json.load(f)
          else:
              # Default stats if no data yet
              stats = {
                  'scan_date': datetime.now().isoformat(),
                  'total_domains': 0,
                  'https_adoption': 0,
                  'http3_support': 0,
                  'ech_deployment': 0,
                  'top_http3_domains': []
              }

          # Save stats for JavaScript consumption
          docs_data_dir = docs_dir / 'data'
          docs_data_dir.mkdir(exist_ok=True)
          with open(docs_data_dir / 'stats.json', 'w') as f:
              json.dump(stats, f, indent=2)

          print(f'Generated site data in {docs_data_dir}')
          "

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
